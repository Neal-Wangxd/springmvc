<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"  
 xmlns:context="http://www.springframework.org/schema/context"  
 xmlns:p="http://www.springframework.org/schema/p"  
 xmlns:mvc="http://www.springframework.org/schema/mvc"  
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
 xmlns:task="http://www.springframework.org/schema/task" 
 xsi:schemaLocation="http://www.springframework.org/schema/beans  
      http://www.springframework.org/schema/beans/spring-beans-4.3.xsd  
      http://www.springframework.org/schema/context  
      http://www.springframework.org/schema/context/spring-context.xsd 
      http://www.springframework.org/schema/task  
	  http://www.springframework.org/schema/task/spring-task-4.3.xsd  
      http://www.springframework.org/schema/mvc  
      http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd">
      
      <!-- 配置springmvc的注解驱动 -->
      <mvc:annotation-driven/>
      
      
      <!-- 注解扫描包 -->
      <!--扫描Controller-->
      <context:component-scan base-package="com.springmvc.controller">
      	<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
        <!--下面这个是防止事务没起作用，spring.xml的父容器先于Servlet的子容器生效，将Service提前加载了。这里不用再进行加载装配-->
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service" />
      </context:component-scan>      
                      

      <!-- 静态资源访问 -->
      <mvc:resources location="page/img/" mapping="/img/**" />
      <mvc:resources location="page/css/" mapping="/css/**" />
      <mvc:resources location="page/js/" mapping="/js/**" />
	  <mvc:resources location="/upload/" mapping="/upload/**" />
	
	  <!-- 试图解析器 -->
	  <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		  <property name="prefix" value="/page"></property>
		  <property name="suffix" value=".jsp"></property>
	  </bean>
	
	  <!-- 文件上传配置 -->
	  <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		  <property name="defaultEncoding" value="utf-8" />
	      <property name="maxUploadSize" value="10485760" />
	      <property name="maxInMemorySize" value="40960" />
	  </bean>
	
	  <!-- 配置数据校验(hibernate-validator) -->
	  <mvc:annotation-driven  validator="validator"/>
	  <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
   		  <property name="providerClass"  value="org.hibernate.validator.HibernateValidator"/>
	  </bean>
	
	  <!-- 配置拦截器 -->
	 <!--  <mvc:interceptors>
	  	 <mvc:interceptor>
	  	 	<mvc:mapping path="/**"/>
	  		<bean id="testInterceptor" class="com.springmvc.interceptor.TestInterceptor"></bean>
	  	 </mvc:interceptor>
	  </mvc:interceptors> -->
	
	  <!-- 配置定时任务 -->
	  <task:annotation-driven />
      <context:component-scan base-package="com.springmvc.task" />
	  
	  <!-- 第三步：注册处理器映射器/处理器适配器 ，添加conversion-service属性-->
      <mvc:annotation-driven conversion-service="conversionService"/>
   
      <!-- 第二步： 创建convertion-Service ，并注入dateConvert-->
      <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="converters">
            <set>
                <ref bean="dateConvert"/>
            </set>
        </property>
      </bean>
      <!-- 第一步:  创建自定义日期转换规则 -->   
      <bean id="dateConvert" class="com.springmvc.util.DateConvert"/>
</beans>